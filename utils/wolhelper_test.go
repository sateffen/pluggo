package utils

import (
	"bytes"
	"net"
	"testing"
)

func TestGenerateMagicPacket(t *testing.T) {
	mac, _ := net.ParseMAC("01:23:45:67:89:ab")
	packet := generateMagicPacket(mac)

	if len(packet) != 102 {
		t.Errorf("expected magic packet length 102, got %d", len(packet))
	}

	expectedMagicPacket := []byte{
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
		0x01, 0x23, 0x45, 0x67, 0x89, 0xAB,
		0x01, 0x23, 0x45, 0x67, 0x89, 0xAB,
		0x01, 0x23, 0x45, 0x67, 0x89, 0xAB,
		0x01, 0x23, 0x45, 0x67, 0x89, 0xAB,
		0x01, 0x23, 0x45, 0x67, 0x89, 0xAB,
		0x01, 0x23, 0x45, 0x67, 0x89, 0xAB,
		0x01, 0x23, 0x45, 0x67, 0x89, 0xAB,
		0x01, 0x23, 0x45, 0x67, 0x89, 0xAB,
		0x01, 0x23, 0x45, 0x67, 0x89, 0xAB,
		0x01, 0x23, 0x45, 0x67, 0x89, 0xAB,
		0x01, 0x23, 0x45, 0x67, 0x89, 0xAB,
		0x01, 0x23, 0x45, 0x67, 0x89, 0xAB,
		0x01, 0x23, 0x45, 0x67, 0x89, 0xAB,
		0x01, 0x23, 0x45, 0x67, 0x89, 0xAB,
		0x01, 0x23, 0x45, 0x67, 0x89, 0xAB,
		0x01, 0x23, 0x45, 0x67, 0x89, 0xAB,
	}

	if !bytes.Equal(packet, expectedMagicPacket) {
		t.Errorf("magic packet does not match expected value")
	}
}

func TestNewWoLHelper_InvalidMAC(t *testing.T) {
	_, err := NewWoLHelper("invalid-mac", "192.168.1.255:9")
	if err == nil {
		t.Error("expected error for invalid MAC, got nil")
	}
}

func TestNewWoLHelper_InvalidBroadcast(t *testing.T) {
	_, err := NewWoLHelper("01:23:45:67:89:ab", "invalid-addr")
	if err == nil {
		t.Error("expected error for invalid broadcast address, got nil")
	}
}
